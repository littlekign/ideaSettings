<application>
  <component name="VimEditorSettings">
    <editor />
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search />
      <history-cmd>
        <entry>action QuickJavaDoc</entry>
        <entry>w</entry>
        <entry>action $Redo</entry>
        <entry>action FindNext</entry>
        <entry>action Find</entry>
        <entry>action AceJumpAction</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/vo/UserBean.java" timestamp="1595738857144">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/controller/UserController.java" timestamp="1595745472309">
        <mark key="[" line="318" column="0" />
        <mark key="]" line="318" column="0" />
        <mark key="." line="318" column="0" />
        <mark key="^" line="323" column="75" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/webapp/WEB-INF/pages/index.jsp" timestamp="1595753835334">
        <mark key="e" line="32" column="21" />
        <mark key="'" line="100" column="0" />
        <mark key="[" line="3" column="80" />
        <mark key="]" line="4" column="15" />
        <mark key="." line="4" column="14" />
        <mark key="^" line="4" column="15" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/webapp/WEB-INF/pages/user/edit.jsp" timestamp="1595749455269">
        <mark key="[" line="48" column="0" />
        <mark key="]" line="48" column="0" />
        <mark key="." line="48" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/interceptor/AdminInterceptor.java" timestamp="1595738904579">
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/dao/BaseDao.java" timestamp="1595738852811">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/dao/UserDao.java" timestamp="1595738873136">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/util/UploadImg.java" timestamp="1595744251323">
        <mark key="[" line="40" column="56" />
        <mark key="]" line="40" column="56" />
        <mark key="." line="40" column="56" />
        <mark key="^" line="43" column="49" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/service/UserService.java" timestamp="1595738893683">
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/dao/imp/UserDaoImp.java" timestamp="1595738877142">
        <mark key="[" line="13" column="0" />
        <mark key="]" line="13" column="0" />
        <mark key="." line="13" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/vo/MessageJsonBean.java" timestamp="1595738861049">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="0" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/vo/MessageBean.java" timestamp="1595738865343">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="0" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/service/imp/UserServiceImp.java" timestamp="1595738897248">
        <mark key="[" line="13" column="0" />
        <mark key="]" line="13" column="0" />
        <mark key="." line="13" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/controller/AdminController.java" timestamp="1595738886017">
        <mark key="[" line="21" column="0" />
        <mark key="]" line="21" column="0" />
        <mark key="." line="21" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/interceptor/UserInterceptor.java" timestamp="1595738900949">
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/model/User.java" timestamp="1595738881058">
        <mark key="[" line="10" column="0" />
        <mark key="]" line="10" column="0" />
        <mark key="." line="10" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/dao/MessageDao.java" timestamp="1595738869293">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/webapp/WEB-INF/static/tinymce.min.js" timestamp="1595752662852">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
        <mark key="^" line="1" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/java/com/licyun/service/MessageService.java" timestamp="1595738890200">
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="/fragment.java" timestamp="1595741149264">
        <mark key="[" line="0" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="16" column="0" filename="$USER_HOME$/Desktop/project/rawjava/src/datastructure/binarytree.java" />
      <jump line="260" column="0" filename="$USER_HOME$/Desktop/project/rawjava/src/datastructure/binarytree.java" />
      <jump line="24" column="16" filename="$USER_HOME$/Desktop/project/springboot/chapter02/src/main/java/gzsc/webapp/controller/HelloController.java" />
      <jump line="0" column="0" filename="$USER_HOME$/Desktop/project/springboot/chapter02/src/main/java/gzsc/webapp/controller/HelloController.java" />
      <jump line="8" column="3" filename="$USER_HOME$/Desktop/project/springboot/chapter02/src/main/java/gzsc/webapp/repositories/AuthorRespostory.java" />
      <jump line="38" column="0" filename="$USER_HOME$/Desktop/project/springboot/chapter02/src/main/java/gzsc/webapp/repositories/AuthorRespostory.java" />
      <jump line="16" column="45" filename="$USER_HOME$/Desktop/project/springbootInjection/src/main/java/com/example/demo/DemoApplication.java" />
      <jump line="11" column="0" filename="$USER_HOME$/Desktop/project/springbootInjection/src/main/java/com/example/demo/DemoApplication.java" />
      <jump line="20" column="0" filename="$USER_HOME$/Desktop/project/springbootInjection/src/main/java/com/example/demo/controller/PropertyInjectedController.java" />
      <jump line="27" column="15" filename="$USER_HOME$/Desktop/live/todoapp/src/main/java/com/todoapp/model/Todo.java" />
      <jump line="28" column="26" filename="$USER_HOME$/Desktop/live/todoapp/src/main/java/com/todoapp/model/Todo.java" />
      <jump line="69" column="17" filename="$USER_HOME$/Desktop/live/todoapp/src/main/java/com/todoapp/model/Todo.java" />
      <jump line="28" column="20" filename="$USER_HOME$/Desktop/live/todoapp/src/main/java/com/todoapp/controller/todolsController.java" />
      <jump line="10" column="0" filename="$USER_HOME$/Desktop/live/todoapp/src/main/java/com/todoapp/controller/todolsController.java" />
      <jump line="8" column="13" filename="$USER_HOME$/Desktop/live/todoapp/src/main/resources/templates/index.html" />
      <jump line="24" column="11" filename="$USER_HOME$/Desktop/SpaceColonies/src/spacecolonies/ColonyReader.java" />
      <jump line="54" column="61" filename="$USER_HOME$/Desktop/SpaceColonies/src/spacecolonies/ProjectRunner.java" />
      <jump line="8" column="0" filename="$USER_HOME$/Desktop/project/JAVA_Projects/SpaceColonies/src/spacecolonies/ColonyReader.java" />
      <jump line="147" column="22" filename="$USER_HOME$/Desktop/SpaceColonies/src/spacecolonies/ColonyReader.java" />
      <jump line="151" column="13" filename="$USER_HOME$/Desktop/SpaceColonies/src/spacecolonies/ColonyReader.java" />
      <jump line="167" column="0" filename="$USER_HOME$/Desktop/SpaceColonies/src/spacecolonies/ColonyReader.java" />
      <jump line="215" column="32" filename="$USER_HOME$/Desktop/project/JAVA_Projects/SpaceColonies/src/spacecolonies/SpaceWindow.java" />
      <jump line="147" column="6" filename="$USER_HOME$/Desktop/project/JAVA_Projects/SpaceColonies/src/spacecolonies/SpaceWindow.java" />
      <jump line="182" column="31" filename="$USER_HOME$/Desktop/project/JAVA_Projects/SpaceColonies/src/spacecolonies/SpaceWindow.java" />
      <jump line="137" column="44" filename="$USER_HOME$/Desktop/SpaceColonies/src/spacecolonies/SpaceWindow.java" />
      <jump line="33" column="19" filename="$USER_HOME$/Desktop/project/webapp/pom.xml" />
      <jump line="21" column="13" filename="$USER_HOME$/Desktop/project/webapp/src/main/java/com/webapp/config/Appconfig.java" />
      <jump line="9" column="0" filename="$USER_HOME$/Desktop/project/webapp/src/main/java/com/webapp/Dao/DepartmentDao.java" />
      <jump line="21" column="10" filename="$USER_HOME$/Desktop/project/webapp/src/main/java/com/webapp/Dao/DepartmentDao.java" />
      <jump line="13" column="0" filename="$USER_HOME$/Desktop/project/webapp/src/main/java/com/webapp/Dao/DaoInfo.java" />
      <jump line="69" column="20" filename="$USER_HOME$/Desktop/project/halo/src/main/java/run/halo/app/model/entity/User.java" />
      <jump line="2" column="0" filename="$USER_HOME$/Desktop/project/springmvc/src/main/com/gz/webapp/resources/spring-servlet.xml" />
      <jump line="24" column="7" filename="$USER_HOME$/Desktop/project/springmvc/src/main/com/gz/webapp/resources/spring-servlet.xml" />
      <jump line="24" column="1" filename="$USER_HOME$/Desktop/project/webapp/src/main/java/com/webapp/Dao/DaoInfo.java" />
      <jump line="66" column="0" filename="$USER_HOME$/Desktop/project/webapp/src/main/java/com/webapp/Dao/DaoInfo.java" />
      <jump line="2" column="27" filename="$USER_HOME$/Desktop/project/todoapp/src/main/resources/application.properties" />
      <jump line="32" column="0" filename="$USER_HOME$/Desktop/project/todoapp/src/test/java/com/todoapp/TodoappApplicationTests.java" />
      <jump line="24" column="8" filename="$USER_HOME$/Desktop/project/todoapp/src/test/java/com/todoapp/TodoappApplicationTests.java" />
      <jump line="4" column="16" filename="$USER_HOME$/Desktop/project/todoapp/src/main/resources/templates/demo/demo.html" />
      <jump line="6" column="0" filename="$USER_HOME$/Desktop/project/todoapp/pom.xml" />
      <jump line="23" column="24" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/pom.xml" />
      <jump line="12" column="25" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/src/main/resources/templates/index.html" />
      <jump line="16" column="12" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/src/main/java/com/controller/LoginController.java" />
      <jump line="54" column="8" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/src/main/java/com/config/ShiroConfig.java" />
      <jump line="53" column="4" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/src/main/java/com/config/ShiroConfig.java" />
      <jump line="37" column="0" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/src/main/java/com/controller/IndexController.java" />
      <jump line="9" column="15" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/src/main/java/com/pojo/User.java" />
      <jump line="62" column="26" filename="$USER_HOME$/Desktop/project/shiro/spring-shiro/src/main/resources/application.yml" />
      <jump line="72" column="38" filename="$USER_HOME$/Desktop/4-29/ssm图书管理系统/ssm图书管理系统/src/resources/applicationContext.xml" />
      <jump line="835" column="0" filename="$USER_HOME$/Desktop/4-29/ssm图书管理系统/ssm图书管理系统/src/java/dao/Query.java" />
      <jump line="790" column="8" filename="$USER_HOME$/Desktop/4-29/ssm图书管理系统/ssm图书管理系统/out/artifacts/ssm_war_exploded/WEB-INF/lib/mapper-3.5.3.jar!/tk/mybatis/mapper/entity/Example.class" />
      <jump line="29" column="17" filename="$USER_HOME$/Desktop/project/todoapp/springboot-todoapp/src/main/java/com/springboottodoapp/entity/TodoList.java" />
      <jump line="9" column="15" filename="$USER_HOME$/Desktop/project/todoapp/springboot-todoapp/src/main/java/com/springboottodoapp/entity/TodoList.java" />
      <jump line="14" column="99" filename="$USER_HOME$/Desktop/project/todoapp/springboot-todoapp/src/test/java/com/springboottodoapp/entity/TodoListTest.java" />
      <jump line="6" column="27" filename="$USER_HOME$/Desktop/untitled folder/WeClass/src/main/java/com/zechuan/WeClass/Application.java" />
      <jump line="100" column="43" filename="$USER_HOME$/Desktop/untitled folder/WeClass/pom.xml" />
      <jump line="1023" column="16" filename="$USER_HOME$/Downloads/projects/通3俄罗斯方块/nbproject/build-imp.xml" />
      <jump line="36" column="25" filename="$USER_HOME$/Downloads/projects/通3俄罗斯方块/nbproject/build-impl.xml" />
      <jump line="18" column="21" filename="$USER_HOME$/Downloads/projects/通3俄罗斯方块/build.xml" />
      <jump line="29" column="0" filename="$USER_HOME$/Downloads/6.3/untitled/demo/src/main/java/com/example/controller/IndexController.java" />
      <jump line="16" column="21" filename="$USER_HOME$/Downloads/6.3/untitled/demo/src/main/java/com/example/pojo/Feeling.java" />
      <jump line="56" column="51" filename="$USER_HOME$/Downloads/6.3/untitled/demo/src/main/java/com/example/pojo/Feeling.java" />
      <jump line="17" column="0" filename="$USER_HOME$/Downloads/6.3/untitled/demo/src/main/java/com/example/pojo/Feeling.java" />
      <jump line="58" column="0" filename="$USER_HOME$/Downloads/6.3/untitled/demo/src/main/java/com/example/pojo/Feeling.java" />
      <jump line="20" column="22" filename="$USER_HOME$/Downloads/6.3/untitled/demo/src/main/resources/templates/index.html" />
      <jump line="11" column="17" filename="$USER_HOME$/Downloads/work-space/ordersystem/bak/crateTable.sql" />
      <jump line="14" column="71" filename="$USER_HOME$/Downloads/work-space/mental/mental/src/main/resources/logback.xml" />
      <jump line="95" column="21" filename="$USER_HOME$/Downloads/work-space/mental/mental/src/main/java/com/caseinfo/controller/IndexController.java" />
      <jump line="20" column="22" filename="$USER_HOME$/Downloads/work-space/mental/mental/src/main/webapp/WEB-INF/view/public/menu.jsp" />
      <jump line="182" column="0" filename="$USER_HOME$/Downloads/work-space/mental/mental/src/main/java/com/caseinfo/util/SensitiveFilter.java" />
      <jump line="15" column="43" filename="$USER_HOME$/Downloads/work-space/mental/mental/src/main/java/com/caseinfo/util/Test.java" />
      <jump line="106" column="57" filename="$USER_HOME$/Downloads/work-space/Lhfly-BBS/src/main/java/controller/UserController.java" />
      <jump line="32" column="24" filename="$USER_HOME$/Downloads/work-space/Lhfly-BBS/src/main/java/Listener/onLineListener.java" />
      <jump line="234" column="0" filename="$USER_HOME$/Downloads/work-space/Lhfly-BBS/src/main/java/Listener/onLineListener.java" />
      <jump line="74" column="0" filename="$USER_HOME$/Downloads/work-space/Lhfly-BBS/src/main/java/Listener/onLineListener.java" />
      <jump line="115" column="65" filename="$USER_HOME$/Downloads/work-space/directory/WebContent/WEB-INF/page/loginExt.jsp" />
      <jump line="26" column="34" filename="$USER_HOME$/Downloads/struct2_wechat 2/myproject/src/com/ideabobo/model/Choose.java" />
      <jump line="785" column="0" filename="$APPLICATION_HOME_DIR$/lib/intellij-xml.jar!/resources/html5-schema/html5/aria.rnc" />
      <jump line="39" column="0" filename="$USER_HOME$/Downloads/qimo/src/login/MyFrame.java" />
      <jump line="128" column="25" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="160" column="26" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="16" column="8" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="161" column="0" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="10" column="43" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="147" column="31" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="238" column="14" filename="$USER_HOME$/Downloads/qimo/src/login/MyFrame.java" />
      <jump line="17" column="0" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="32" column="51" filename="$USER_HOME$/Downloads/qimo/src/login/MyFrame.java" />
      <jump line="36" column="35" filename="$USER_HOME$/Downloads/qimo/src/login/MyFrame.java" />
      <jump line="44" column="43" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="40" column="0" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="164" column="0" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="149" column="7" filename="$USER_HOME$/Downloads/qimo/src/login/login.java" />
      <jump line="32" column="4" filename="$USER_HOME$/Downloads/新建文件夹/src/com/gugu/servlet/RegServlet.java" />
      <jump line="838" column="28" filename="/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home/src.zip!/java/sql/ResultSet.java" />
      <jump line="172" column="23" filename="$USER_HOME$/Downloads/新建文件夹/WebContent/WEB-INF/web.xml" />
      <jump line="63" column="18" filename="$USER_HOME$/Downloads/新建文件夹/WebContent/resetPassword.jsp" />
      <jump line="20" column="19" filename="$USER_HOME$/Downloads/work-space/Hotel/pom.xml" />
      <jump line="14" column="45" filename="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/webapp/WEB-INF/pages/admin/login.jsp" />
      <jump line="99" column="0" filename="$USER_HOME$/Downloads/learn/springMVCgbook/src/main/webapp/WEB-INF/pages/index.jsp" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="4">
        <text>#</text>
      </register>
      <register name="-" type="4">
        <text>#</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">PHNjcmlwdCBzcmM9IiR7cGFnZUNvbnRleHQucmVxdWVzdC5jb250ZXh0UGF0aH0vc3RhdGljL3BhZ2Vqc29uLmpzIj48L3NjcmlwdD4K</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICBtb2RlOiJzcGVjaWZpY190ZXh0YXJlYXMiLAo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICB2Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgIAo=</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">PHNjcmlwdCBzcmM9IiR7cGFnZUNvbnRleHQucmVxdWVzdC5jb250ZXh0UGF0aH0vc3RhdGljL3RpbnltY2UubWluLmpzIj48L3NjcmlwdD4K</text>
      </register>
      <register name="9" type="4">
        <text encoding="base64"></text>
      </register>
      <register name=":" type="4">
        <text>action Find</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="false" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>